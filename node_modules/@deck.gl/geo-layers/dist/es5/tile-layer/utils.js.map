{"version":3,"sources":["../../../src/tile-layer/utils.js"],"names":["TILE_SIZE","urlType","type","value","validate","Array","isArray","every","url","equals","value1","value2","len","length","i","getURLFromTemplate","template","properties","index","Math","abs","x","y","replace","_","property","getBoundingBox","viewport","zRange","corners","minZ","maxZ","minTargetZ","targetZ","maxTargetZ","unproject","width","height","min","map","arr","max","getOSMTileIndex","lngLat","scale","getTileIndex","getScale","z","tileSize","pow","osmTile2lngLat","lng","n","PI","lat","atan","exp","tile2XY","tileToBoundingBox","isGeospatial","west","north","east","south","left","top","right","bottom","getIdentityTileIndices","bbox","minX","minY","maxX","maxY","indices","floor","push","getOSMTileIndices","normalizedX","getTileIndices","maxZoom","minZoom","ceil","zoom","Number","isFinite"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AAEA,IAAMA,SAAS,GAAG,GAAlB;AAEO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAE,KADe;AAErBC,EAAAA,KAAK,EAAE,EAFc;AAGrBC,EAAAA,QAAQ,EAAE,kBAAAD,KAAK;AAAA,WACb,OAAOA,KAAP,KAAiB,QAAjB,IACCE,KAAK,CAACC,OAAN,CAAcH,KAAd,KAAwBA,KAAK,CAACI,KAAN,CAAY,UAAAC,GAAG;AAAA,aAAI,OAAOA,GAAP,KAAe,QAAnB;AAAA,KAAf,CAFZ;AAAA,GAHM;AAMrBC,EAAAA,MAAM,EAAE,gBAACC,MAAD,EAASC,MAAT,EAAoB;AAC1B,QAAID,MAAM,KAAKC,MAAf,EAAuB;AACrB,aAAO,IAAP;AACD;;AACD,QAAI,CAACN,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAD,IAA0B,CAACL,KAAK,CAACC,OAAN,CAAcK,MAAd,CAA/B,EAAsD;AACpD,aAAO,KAAP;AACD;;AACD,QAAMC,GAAG,GAAGF,MAAM,CAACG,MAAnB;;AACA,QAAID,GAAG,KAAKD,MAAM,CAACE,MAAnB,EAA2B;AACzB,aAAO,KAAP;AACD;;AACD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5B,UAAIJ,MAAM,CAACI,CAAD,CAAN,KAAcH,MAAM,CAACG,CAAD,CAAxB,EAA6B;AAC3B,eAAO,KAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD;AAvBoB,CAAhB;;;AA0BA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,UAAtC,EAAkD;AACvD,MAAI,CAACD,QAAD,IAAa,CAACA,QAAQ,CAACH,MAA3B,EAAmC;AACjC,WAAO,IAAP;AACD;;AACD,MAAIR,KAAK,CAACC,OAAN,CAAcU,QAAd,CAAJ,EAA6B;AAC3B,QAAME,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASH,UAAU,CAACI,CAAX,GAAeJ,UAAU,CAACK,CAAnC,IAAwCN,QAAQ,CAACH,MAA/D;AACAG,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,KAAD,CAAnB;AACD;;AACD,SAAOF,QAAQ,CAACO,OAAT,CAAiB,oBAAjB,EAAuC,UAACC,CAAD,EAAIC,QAAJ;AAAA,WAAiBR,UAAU,CAACQ,QAAD,CAA3B;AAAA,GAAvC,CAAP;AACD;;AAKD,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,MAAlC,EAA0C;AACxC,MAAIC,OAAJ;;AACA,MAAID,MAAM,IAAIA,MAAM,CAACf,MAAP,KAAkB,CAAhC,EAAmC;AAAA,kDACZe,MADY;AAAA,QAC1BE,IAD0B;AAAA,QACpBC,IADoB;;AAEjC,QAAMC,UAAU,GAAG;AAACC,MAAAA,OAAO,EAAEH;AAAV,KAAnB;AACA,QAAMI,UAAU,GAAG;AAACD,MAAAA,OAAO,EAAEF;AAAV,KAAnB;AACAF,IAAAA,OAAO,GAAG,CAERF,QAAQ,CAACQ,SAAT,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,EAA2BH,UAA3B,CAFQ,EAGRL,QAAQ,CAACQ,SAAT,CAAmB,CAACR,QAAQ,CAACS,KAAV,EAAiB,CAAjB,CAAnB,EAAwCJ,UAAxC,CAHQ,EAIRL,QAAQ,CAACQ,SAAT,CAAmB,CAAC,CAAD,EAAIR,QAAQ,CAACU,MAAb,CAAnB,EAAyCL,UAAzC,CAJQ,EAKRL,QAAQ,CAACQ,SAAT,CAAmB,CAACR,QAAQ,CAACS,KAAV,EAAiBT,QAAQ,CAACU,MAA1B,CAAnB,EAAsDL,UAAtD,CALQ,EAQRL,QAAQ,CAACQ,SAAT,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,EAA2BD,UAA3B,CARQ,EASRP,QAAQ,CAACQ,SAAT,CAAmB,CAACR,QAAQ,CAACS,KAAV,EAAiB,CAAjB,CAAnB,EAAwCF,UAAxC,CATQ,EAURP,QAAQ,CAACQ,SAAT,CAAmB,CAAC,CAAD,EAAIR,QAAQ,CAACU,MAAb,CAAnB,EAAyCH,UAAzC,CAVQ,EAWRP,QAAQ,CAACQ,SAAT,CAAmB,CAACR,QAAQ,CAACS,KAAV,EAAiBT,QAAQ,CAACU,MAA1B,CAAnB,EAAsDH,UAAtD,CAXQ,CAAV;AAaD,GAjBD,MAiBO;AACLL,IAAAA,OAAO,GAAG,CACRF,QAAQ,CAACQ,SAAT,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CADQ,EAERR,QAAQ,CAACQ,SAAT,CAAmB,CAACR,QAAQ,CAACS,KAAV,EAAiB,CAAjB,CAAnB,CAFQ,EAGRT,QAAQ,CAACQ,SAAT,CAAmB,CAAC,CAAD,EAAIR,QAAQ,CAACU,MAAb,CAAnB,CAHQ,EAIRV,QAAQ,CAACQ,SAAT,CAAmB,CAACR,QAAQ,CAACS,KAAV,EAAiBT,QAAQ,CAACU,MAA1B,CAAnB,CAJQ,CAAV;AAMD;;AAED,SAAO,CACLlB,IAAI,CAACmB,GAAL,OAAAnB,IAAI,sCAAQU,OAAO,CAACU,GAAR,CAAY,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAAC,CAAD,CAAP;AAAA,GAAf,CAAR,EADC,EAELrB,IAAI,CAACmB,GAAL,OAAAnB,IAAI,sCAAQU,OAAO,CAACU,GAAR,CAAY,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAAC,CAAD,CAAP;AAAA,GAAf,CAAR,EAFC,EAGLrB,IAAI,CAACsB,GAAL,OAAAtB,IAAI,sCAAQU,OAAO,CAACU,GAAR,CAAY,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAAC,CAAD,CAAP;AAAA,GAAf,CAAR,EAHC,EAILrB,IAAI,CAACsB,GAAL,OAAAtB,IAAI,sCAAQU,OAAO,CAACU,GAAR,CAAY,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAAC,CAAD,CAAP;AAAA,GAAf,CAAR,EAJC,CAAP;AAMD;;AAMD,SAASE,eAAT,CAAyBC,MAAzB,EAAiCC,KAAjC,EAAwC;AAAA,uBACzB,gCAAcD,MAAd,CADyB;AAAA;AAAA,MACjCtB,CADiC;AAAA,MAC9BC,CAD8B;;AAEtCD,EAAAA,CAAC,IAAIuB,KAAK,GAAG5C,SAAb;AACAsB,EAAAA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAGtB,SAAT,IAAsB4C,KAA1B;AACA,SAAO,CAACvB,CAAD,EAAIC,CAAJ,CAAP;AACD;;AAED,SAASuB,YAAT,OAA8BD,KAA9B,EAAqC;AAAA;AAAA,MAAdvB,CAAc;AAAA,MAAXC,CAAW;;AACnC,SAAO,CAAED,CAAC,GAAGuB,KAAL,GAAc5C,SAAf,EAA2BsB,CAAC,GAAGsB,KAAL,GAAc5C,SAAxC,CAAP;AACD;;AAED,SAAS8C,QAAT,CAAkBC,CAAlB,EAA2C;AAAA,MAAtBC,QAAsB,uEAAXhD,SAAW;AACzC,SAAQmB,IAAI,CAAC8B,GAAL,CAAS,CAAT,EAAYF,CAAZ,IAAiB/C,SAAlB,GAA+BgD,QAAtC;AACD;;AAGD,SAASE,cAAT,CAAwB7B,CAAxB,EAA2BC,CAA3B,EAA8ByB,CAA9B,EAAiC;AAC/B,MAAMH,KAAK,GAAGE,QAAQ,CAACC,CAAD,CAAtB;AACA,MAAMI,GAAG,GAAI9B,CAAC,GAAGuB,KAAL,GAAc,GAAd,GAAoB,GAAhC;AACA,MAAMQ,CAAC,GAAGjC,IAAI,CAACkC,EAAL,GAAW,IAAIlC,IAAI,CAACkC,EAAT,GAAc/B,CAAf,GAAoBsB,KAAxC;AACA,MAAMU,GAAG,GAAI,MAAMnC,IAAI,CAACkC,EAAZ,GAAkBlC,IAAI,CAACoC,IAAL,CAAU,OAAOpC,IAAI,CAACqC,GAAL,CAASJ,CAAT,IAAcjC,IAAI,CAACqC,GAAL,CAAS,CAACJ,CAAV,CAArB,CAAV,CAA9B;AACA,SAAO,CAACD,GAAD,EAAMG,GAAN,CAAP;AACD;;AAED,SAASG,OAAT,CAAiBpC,CAAjB,EAAoBC,CAApB,EAAuByB,CAAvB,EAA0BC,QAA1B,EAAoC;AAClC,MAAMJ,KAAK,GAAGE,QAAQ,CAACC,CAAD,EAAIC,QAAJ,CAAtB;AACA,SAAO,CAAE3B,CAAC,GAAGuB,KAAL,GAAc5C,SAAf,EAA2BsB,CAAC,GAAGsB,KAAL,GAAc5C,SAAxC,CAAP;AACD;;AAEM,SAAS0D,iBAAT,CAA2B/B,QAA3B,EAAqCN,CAArC,EAAwCC,CAAxC,EAA2CyB,CAA3C,EAAoE;AAAA,MAAtBC,QAAsB,uEAAXhD,SAAW;;AACzE,MAAI2B,QAAQ,CAACgC,YAAb,EAA2B;AAAA,0BACHT,cAAc,CAAC7B,CAAD,EAAIC,CAAJ,EAAOyB,CAAP,CADX;AAAA;AAAA,QAClBa,IADkB;AAAA,QACZC,KADY;;AAAA,2BAEHX,cAAc,CAAC7B,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,EAAeyB,CAAf,CAFX;AAAA;AAAA,QAElBe,IAFkB;AAAA,QAEZC,KAFY;;AAGzB,WAAO;AAACH,MAAAA,IAAI,EAAJA,IAAD;AAAOC,MAAAA,KAAK,EAALA,KAAP;AAAcC,MAAAA,IAAI,EAAJA,IAAd;AAAoBC,MAAAA,KAAK,EAALA;AAApB,KAAP;AACD;;AALwE,iBAMrDN,OAAO,CAACpC,CAAD,EAAIC,CAAJ,EAAOyB,CAAP,EAAUC,QAAV,CAN8C;AAAA;AAAA,MAMlEgB,IANkE;AAAA,MAM5DC,GAN4D;;AAAA,kBAOjDR,OAAO,CAACpC,CAAC,GAAG,CAAL,EAAQC,CAAC,GAAG,CAAZ,EAAeyB,CAAf,EAAkBC,QAAlB,CAP0C;AAAA;AAAA,MAOlEkB,KAPkE;AAAA,MAO3DC,MAP2D;;AAQzE,SAAO;AAACH,IAAAA,IAAI,EAAJA,IAAD;AAAOC,IAAAA,GAAG,EAAHA,GAAP;AAAYC,IAAAA,KAAK,EAALA,KAAZ;AAAmBC,IAAAA,MAAM,EAANA;AAAnB,GAAP;AACD;;AAED,SAASC,sBAAT,CAAgCzC,QAAhC,EAA0CoB,CAA1C,EAA6CC,QAA7C,EAAuD;AACrD,MAAMqB,IAAI,GAAG3C,cAAc,CAACC,QAAD,CAA3B;AACA,MAAMiB,KAAK,GAAGE,QAAQ,CAACC,CAAD,EAAIC,QAAJ,CAAtB;;AAFqD,sBAIhCH,YAAY,CAAC,CAACwB,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAD,EAAqBzB,KAArB,CAJoB;AAAA;AAAA,MAI9C0B,IAJ8C;AAAA,MAIxCC,IAJwC;;AAAA,uBAKhC1B,YAAY,CAAC,CAACwB,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAD,EAAqBzB,KAArB,CALoB;AAAA;AAAA,MAK9C4B,IAL8C;AAAA,MAKxCC,IALwC;;AAMrD,MAAMC,OAAO,GAAG,EAAhB;;AAMA,OAAK,IAAIrD,CAAC,GAAGF,IAAI,CAACwD,KAAL,CAAWL,IAAX,CAAb,EAA+BjD,CAAC,GAAGmD,IAAnC,EAAyCnD,CAAC,EAA1C,EAA8C;AAC5C,SAAK,IAAIC,CAAC,GAAGH,IAAI,CAACwD,KAAL,CAAWJ,IAAX,CAAb,EAA+BjD,CAAC,GAAGmD,IAAnC,EAAyCnD,CAAC,EAA1C,EAA8C;AAC5CoD,MAAAA,OAAO,CAACE,IAAR,CAAa;AAACvD,QAAAA,CAAC,EAADA,CAAD;AAAIC,QAAAA,CAAC,EAADA,CAAJ;AAAOyB,QAAAA,CAAC,EAADA;AAAP,OAAb;AACD;AACF;;AAED,SAAO2B,OAAP;AACD;;AAED,SAASG,iBAAT,CAA2BlD,QAA3B,EAAqCoB,CAArC,EAAwCnB,MAAxC,EAAgD;AAC9C,MAAMyC,IAAI,GAAG3C,cAAc,CAACC,QAAD,EAAWC,MAAX,CAA3B;AACA,MAAMgB,KAAK,GAAGE,QAAQ,CAACC,CAAD,CAAtB;;AAF8C,yBAU3BL,eAAe,CAAC,CAAC2B,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAD,EAAqBzB,KAArB,CAVY;AAAA;AAAA,MAUzC0B,IAVyC;AAAA,MAUnCC,IAVmC;;AAAA,0BAW3B7B,eAAe,CAAC,CAAC2B,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAD,EAAqBzB,KAArB,CAXY;AAAA;AAAA,MAWzC4B,IAXyC;AAAA,MAWnCC,IAXmC;;AAY9C,MAAMC,OAAO,GAAG,EAAhB;AAMAJ,EAAAA,IAAI,GAAGnD,IAAI,CAACwD,KAAL,CAAWL,IAAX,CAAP;AACAE,EAAAA,IAAI,GAAGrD,IAAI,CAACmB,GAAL,CAASgC,IAAI,GAAG1B,KAAhB,EAAuB4B,IAAvB,CAAP;AACAD,EAAAA,IAAI,GAAGpD,IAAI,CAACsB,GAAL,CAAS,CAAT,EAAYtB,IAAI,CAACwD,KAAL,CAAWJ,IAAX,CAAZ,CAAP;AACAE,EAAAA,IAAI,GAAGtD,IAAI,CAACmB,GAAL,CAASM,KAAT,EAAgB6B,IAAhB,CAAP;;AACA,OAAK,IAAIpD,CAAC,GAAGiD,IAAb,EAAmBjD,CAAC,GAAGmD,IAAvB,EAA6BnD,CAAC,EAA9B,EAAkC;AAChC,SAAK,IAAIC,CAAC,GAAGiD,IAAb,EAAmBjD,CAAC,GAAGmD,IAAvB,EAA6BnD,CAAC,EAA9B,EAAkC;AAEhC,UAAMwD,WAAW,GAAGzD,CAAC,GAAGF,IAAI,CAACwD,KAAL,CAAWtD,CAAC,GAAGuB,KAAf,IAAwBA,KAAhD;AACA8B,MAAAA,OAAO,CAACE,IAAR,CAAa;AAACvD,QAAAA,CAAC,EAAEyD,WAAJ;AAAiBxD,QAAAA,CAAC,EAADA,CAAjB;AAAoByB,QAAAA,CAAC,EAADA;AAApB,OAAb;AACD;AACF;;AAED,SAAO2B,OAAP;AACD;;AAOM,SAASK,cAAT,CAAwBpD,QAAxB,EAAkCqD,OAAlC,EAA2CC,OAA3C,EAAoDrD,MAApD,EAAkF;AAAA,MAAtBoB,QAAsB,uEAAXhD,SAAW;AACvF,MAAI+C,CAAC,GAAG5B,IAAI,CAAC+D,IAAL,CAAUvD,QAAQ,CAACwD,IAAnB,CAAR;;AACA,MAAIC,MAAM,CAACC,QAAP,CAAgBJ,OAAhB,KAA4BlC,CAAC,GAAGkC,OAApC,EAA6C;AAC3C,WAAO,EAAP;AACD;;AACD,MAAIG,MAAM,CAACC,QAAP,CAAgBL,OAAhB,KAA4BjC,CAAC,GAAGiC,OAApC,EAA6C;AAC3CjC,IAAAA,CAAC,GAAGiC,OAAJ;AACD;;AAED,SAAOrD,QAAQ,CAACgC,YAAT,GACHkB,iBAAiB,CAAClD,QAAD,EAAWoB,CAAX,EAAcnB,MAAd,CADd,GAEHwC,sBAAsB,CAACzC,QAAD,EAAWoB,CAAX,EAAcC,QAAd,CAF1B;AAGD","sourcesContent":["import {lngLatToWorld} from '@math.gl/web-mercator';\n\nconst TILE_SIZE = 512;\n\nexport const urlType = {\n  type: 'url',\n  value: '',\n  validate: value =>\n    typeof value === 'string' ||\n    (Array.isArray(value) && value.every(url => typeof url === 'string')),\n  equals: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nexport function getURLFromTemplate(template, properties) {\n  if (!template || !template.length) {\n    return null;\n  }\n  if (Array.isArray(template)) {\n    const index = Math.abs(properties.x + properties.y) % template.length;\n    template = template[index];\n  }\n  return template.replace(/\\{ *([\\w_-]+) *\\}/g, (_, property) => properties[property]);\n}\n\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport, zRange) {\n  let corners;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const minTargetZ = {targetZ: minZ};\n    const maxTargetZ = {targetZ: maxZ};\n    corners = [\n      // Lower zRange\n      viewport.unproject([0, 0], minTargetZ),\n      viewport.unproject([viewport.width, 0], minTargetZ),\n      viewport.unproject([0, viewport.height], minTargetZ),\n      viewport.unproject([viewport.width, viewport.height], minTargetZ),\n\n      // Upper zRange\n      viewport.unproject([0, 0], maxTargetZ),\n      viewport.unproject([viewport.width, 0], maxTargetZ),\n      viewport.unproject([0, viewport.height], maxTargetZ),\n      viewport.unproject([viewport.width, viewport.height], maxTargetZ)\n    ];\n  } else {\n    corners = [\n      viewport.unproject([0, 0]),\n      viewport.unproject([viewport.width, 0]),\n      viewport.unproject([0, viewport.height]),\n      viewport.unproject([viewport.width, viewport.height])\n    ];\n  }\n\n  return [\n    Math.min(...corners.map(arr => arr[0])),\n    Math.min(...corners.map(arr => arr[1])),\n    Math.max(...corners.map(arr => arr[0])),\n    Math.max(...corners.map(arr => arr[1]))\n  ];\n}\n\n/*\n * get the OSM tile index at the given location\n * https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames\n */\nfunction getOSMTileIndex(lngLat, scale) {\n  let [x, y] = lngLatToWorld(lngLat);\n  x *= scale / TILE_SIZE;\n  y = (1 - y / TILE_SIZE) * scale;\n  return [x, y];\n}\n\nfunction getTileIndex([x, y], scale) {\n  return [(x * scale) / TILE_SIZE, (y * scale) / TILE_SIZE];\n}\n\nfunction getScale(z, tileSize = TILE_SIZE) {\n  return (Math.pow(2, z) * TILE_SIZE) / tileSize;\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nfunction osmTile2lngLat(x, y, z) {\n  const scale = getScale(z);\n  const lng = (x / scale) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / scale;\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nfunction tile2XY(x, y, z, tileSize) {\n  const scale = getScale(z, tileSize);\n  return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\n\nexport function tileToBoundingBox(viewport, x, y, z, tileSize = TILE_SIZE) {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {west, north, east, south};\n  }\n  const [left, top] = tile2XY(x, y, z, tileSize);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z, tileSize);\n  return {left, top, right, bottom};\n}\n\nfunction getIdentityTileIndices(viewport, z, tileSize) {\n  const bbox = getBoundingBox(viewport);\n  const scale = getScale(z, tileSize);\n\n  const [minX, minY] = getTileIndex([bbox[0], bbox[1]], scale);\n  const [maxX, maxY] = getTileIndex([bbox[2], bbox[3]], scale);\n  const indices = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({x, y, z});\n    }\n  }\n\n  return indices;\n}\n\nfunction getOSMTileIndices(viewport, z, zRange) {\n  const bbox = getBoundingBox(viewport, zRange);\n  const scale = getScale(z);\n  /*\n    minX, maxX could be out of bounds if longitude is near the 180 meridian or multiple worlds\n    are shown:\n                |       |\n    actual   -2 -1  0  1  2  3\n    expected  2  3  0  1  2  3\n   */\n  let [minX, minY] = getOSMTileIndex([bbox[0], bbox[3]], scale);\n  let [maxX, maxY] = getOSMTileIndex([bbox[2], bbox[1]], scale);\n  const indices = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  minX = Math.floor(minX);\n  maxX = Math.min(minX + scale, maxX); // Avoid creating duplicates\n  minY = Math.max(0, Math.floor(minY));\n  maxY = Math.min(scale, maxY);\n  for (let x = minX; x < maxX; x++) {\n    for (let y = minY; y < maxY; y++) {\n      // Cast to valid x between [0, scale]\n      const normalizedX = x - Math.floor(x / scale) * scale;\n      indices.push({x: normalizedX, y, z});\n    }\n  }\n\n  return indices;\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\nexport function getTileIndices(viewport, maxZoom, minZoom, zRange, tileSize = TILE_SIZE) {\n  let z = Math.ceil(viewport.zoom);\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    return [];\n  }\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n\n  return viewport.isGeospatial\n    ? getOSMTileIndices(viewport, z, zRange)\n    : getIdentityTileIndices(viewport, z, tileSize);\n}\n"],"file":"utils.js"}