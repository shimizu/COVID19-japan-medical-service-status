{"ast":null,"code":"var _jsxFileName = \"/Users/idg08/Desktop/works/hospital/src/App.js\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { green } from '@material-ui/core/colors';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useHeaderStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nconst useMapStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: \"100%\",\n    backgroundColor: \"black\"\n  }\n}));\nconst useChardStyles = makeStyles(theme => ({\n  root: {\n    position: \"absolute\",\n    '& > *': {\n      margin: theme.spacing(1),\n      padding: 10,\n      left: 30\n    }\n  }\n}));\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 15\n  }\n})));\nconst YellowCheckbox = withStyles({\n  root: {\n    color: \"gray\",\n    '&$checked': {\n      color: \"#eec643\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 15\n  }\n})));\nconst RedCheckbox = withStyles({\n  root: {\n    color: \"gray\",\n    '&$checked': {\n      color: \"#d62246\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 15\n  }\n})));\n\nfunction App() {\n  const headerClasses = useHeaderStyles();\n  const mapClasses = useMapStyles();\n  const cardClasses = useChardStyles();\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n    checkedD: true,\n    checkedE: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: headerClasses.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: headerClasses.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"News\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: mapClasses.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cardClasses.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"\\u30DD\\u30A4\\u30F3\\u30C8\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"\\u516D\\u89D2\\u5F62\")), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      checked: state.checkedA,\n      onChange: handleChange,\n      name: \"checkedA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 26\n      }\n    }),\n    label: \"\\u901A\\u5E38\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(YellowCheckbox, {\n      checked: state.checkedB,\n      onChange: handleChange,\n      name: \"checkedB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 26\n      }\n    }),\n    label: \"\\u5236\\u9650\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(RedCheckbox, {\n      checked: state.checkedC,\n      onChange: handleChange,\n      name: \"checkedC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 26\n      }\n    }),\n    label: \"\\u505C\\u6B62\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      checked: state.checkedD,\n      onChange: handleChange,\n      name: \"checkedD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 26\n      }\n    }),\n    label: \"\\u8A2D\\u7F6E\\u306A\\u3057\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      checked: state.checkedE,\n      onChange: handleChange,\n      name: \"checkedE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 26\n      }\n    }),\n    label: \"\\u672A\\u56DE\\u7B54\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/idg08/Desktop/works/hospital/src/App.js"],"names":["React","makeStyles","withStyles","AppBar","Toolbar","Typography","Paper","green","ButtonGroup","Button","FormGroup","FormControlLabel","Checkbox","useHeaderStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","useMapStyles","height","backgroundColor","useChardStyles","position","margin","padding","left","GreenCheckbox","color","checked","props","YellowCheckbox","RedCheckbox","App","headerClasses","mapClasses","cardClasses","state","setState","useState","checkedA","checkedB","checkedC","checkedD","checkedE","handleChange","event","target","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nimport { green } from '@material-ui/core/colors';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\n\nconst useHeaderStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nconst useMapStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height:\"100%\",\n    backgroundColor:\"black\"\n  },\n}));\n\nconst useChardStyles = makeStyles((theme) => ({\n  root: {\n    position:\"absolute\",\n    '& > *': {\n      margin: theme.spacing(1),\n      padding:10,\n      left:30\n    },\n  },\n}));\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst YellowCheckbox = withStyles({\n  root: {\n    color: \"gray\",\n    '&$checked': {\n      color: \"#eec643\",\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst RedCheckbox = withStyles({\n  root: {\n    color: \"gray\",\n    '&$checked': {\n      color: \"#d62246\",\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nfunction App() {\n  const headerClasses = useHeaderStyles();\n  const mapClasses = useMapStyles();\n  const cardClasses = useChardStyles();\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true,\n    checkedD: true,\n    checkedE: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n    \n    <div className={headerClasses.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={headerClasses.title}>\n            News\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n    <div className={mapClasses.root}>\n\n        <div className={cardClasses.root}>\n          <Paper elevation={3} >\n          <ButtonGroup color=\"primary\">\n            <Button  variant=\"contained\">ポイント</Button>\n            <Button>六角形</Button>\n          </ButtonGroup>\n          <FormGroup row>\n              <FormControlLabel\n                control={<GreenCheckbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"通常\"\n              />\n              <FormControlLabel\n                control={<YellowCheckbox checked={state.checkedB} onChange={handleChange} name=\"checkedB\"  />}\n                label=\"制限\"\n              />\n              <FormControlLabel\n                control={<RedCheckbox checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />}\n                label=\"停止\"\n              />\n              <FormControlLabel\n                control={<GreenCheckbox checked={state.checkedD} onChange={handleChange} name=\"checkedD\" />}\n                label=\"設置なし\"\n              />              \n              <FormControlLabel\n                control={<GreenCheckbox checked={state.checkedE} onChange={handleChange} name=\"checkedE\" />}\n                label=\"未回答\"\n              />              \n            </FormGroup>\n\n          </Paper>\n        </div>\n\n    </div>\n\n    </>\n\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}