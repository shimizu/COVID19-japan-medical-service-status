{"ast":null,"code":"var _jsxFileName = \"/Users/idg08/Desktop/works/hospital/src/App.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MapGL from \"react-map-gl\";\nimport CheckBoxs from \"./components/CheckBoxs\";\nimport BottomBtn from \"./components/BottomBtn\";\nimport { parse, fetchFile } from '@loaders.gl/core';\nimport { ZipLoader } from '@loaders.gl/zip';\nimport decodeText from './component/DecodeText.js';\nimport { csv as d3csv } from 'd3-fetch';\nimport { csvParse } from 'd3-dsv'; //mapboxのトークンは自分で取得したものに変更してください。\n//このトークンは突然使えなくなる可能性があります。\n\nconst MAPBOX_TOKEN = \"pk.eyJ1Ijoic2hpbWl6dSIsImEiOiJjam95MDBhamYxMjA1M2tyemk2aHMwenp5In0.i2kMIJulhyPLwp3jiLlpsA\";\nconst DATA_URL = \"data/covid-19_daily_survey.csv\"; //data convert fnction\n\nconst csvcast = (d, i) => {\n  d.id = d.code;\n  Object.keys(d).forEach(key => {\n    if (!isNaN(+d[key]) && key !== 'id') d[key] = +d[key];\n  });\n  return d;\n};\n\nfunction App() {\n  const mapRef = useRef(null);\n  const bbtnRef = useRef(null);\n  const [data, setData] = useState(null);\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    longitude: 139.0110974,\n    latitude: 36.3226885,\n    zoom: 6,\n    maxZoom: 20\n  });\n\n  const handleChangeCheckbox = v => {\n    console.log(v);\n  };\n\n  const handleChangeBottomBtn = v => {\n    console.log(v);\n  };\n\n  const getMapsize = () => {\n    const width = mapRef.current ? mapRef.current.offsetWidth : 0;\n    const height = mapRef.current ? mapRef.current.offsetHeight : 0;\n    const bbtnHeight = bbtnRef.current ? bbtnRef.current.offsetHeight : 0;\n    setViewport(v => {\n      return { ...v,\n        width: width,\n        height: height - bbtnHeight\n      };\n    });\n  }; //ロード時にコンポネーントのwidth,heightを取得\n\n\n  useEffect(getMapsize, []);\n  /*\n  //データロード\n  useEffect(()=>{\n  const fetchValueData = async (url) => {\n      const result = await d3csv(DATA_URL, csvcast);\n      console.log(result)\n  \tsetData(result);\n  };\n  fetchValueData();\n    \n  }, []);\n  */\n\n  useEffect(() => {\n    //地価データ取得\n    const fetchData = async url => {\n      const buff = await parse(fetchFile(url), ZipLoader);\n      const key = Object.keys(buff)[0];\n      decodeText(buff[key]).then(text => {\n        setData(csvParse(text, csvcast));\n      });\n    };\n\n    fetchData(DATA_URL);\n  }, []); //resize\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getMapsize);\n    return () => window.removeEventListener(\"resize\", getMapsize);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"\\u533B\\u7642\\u63D0\\u4F9B\\u4F53\\u5236\\u306E\\u72B6\\u6CC1\"))), /*#__PURE__*/React.createElement(CheckBoxs, {\n    changeCheckbox: handleChangeCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    ref: mapRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MapGL, Object.assign({\n    style: {}\n  }, viewport, {\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    mapboxApiAccessToken: MAPBOX_TOKEN,\n    onViewportChange: v => setViewport(v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bottom\",\n    ref: bbtnRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BottomBtn, {\n    changeBottomBtn: handleChangeBottomBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;\n/*\n \n\n        */","map":{"version":3,"sources":["/Users/idg08/Desktop/works/hospital/src/App.js"],"names":["React","useEffect","useState","useRef","AppBar","Toolbar","Typography","MapGL","CheckBoxs","BottomBtn","parse","fetchFile","ZipLoader","decodeText","csv","d3csv","csvParse","MAPBOX_TOKEN","DATA_URL","csvcast","d","i","id","code","Object","keys","forEach","key","isNaN","App","mapRef","bbtnRef","data","setData","viewport","setViewport","width","window","innerWidth","height","innerHeight","longitude","latitude","zoom","maxZoom","handleChangeCheckbox","v","console","log","handleChangeBottomBtn","getMapsize","current","offsetWidth","offsetHeight","bbtnHeight","fetchData","url","buff","then","text","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport MapGL from \"react-map-gl\";\n\nimport CheckBoxs from \"./components/CheckBoxs\";\nimport BottomBtn from \"./components/BottomBtn\";\n\nimport { parse, fetchFile } from '@loaders.gl/core';\nimport { ZipLoader } from '@loaders.gl/zip';\nimport decodeText from './component/DecodeText.js';\nimport { csv as d3csv } from 'd3-fetch';\nimport { csvParse } from 'd3-dsv';\n\n//mapboxのトークンは自分で取得したものに変更してください。\n//このトークンは突然使えなくなる可能性があります。\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1Ijoic2hpbWl6dSIsImEiOiJjam95MDBhamYxMjA1M2tyemk2aHMwenp5In0.i2kMIJulhyPLwp3jiLlpsA\";\n\n  const DATA_URL = \"data/covid-19_daily_survey.csv\";\n\n\n\n//data convert fnction\nconst  csvcast = (d, i) => {\n\td.id = d.code;\n\tObject.keys(d).forEach((key) => {\n\t\tif (!isNaN(+d[key]) && key !== 'id') d[key] = +d[key];\n\t});\n\treturn d;\n};\n\n\nfunction App() {\n  const mapRef = useRef(null);\n  const bbtnRef = useRef(null);\n  const [data, setData] = useState(null);\n\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    longitude: 139.0110974,\n    latitude: 36.3226885,\n    zoom: 6,\n    maxZoom: 20\n  });\n\n  const handleChangeCheckbox = v => {\n    console.log(v);\n  };\n\n  const handleChangeBottomBtn = v => {\n    console.log(v);\n  };\n\n  const getMapsize = () => {\n    const width = mapRef.current ? mapRef.current.offsetWidth : 0;\n    const height = mapRef.current ? mapRef.current.offsetHeight : 0;\n    const bbtnHeight = bbtnRef.current ? bbtnRef.current.offsetHeight : 0;\n\n    setViewport(v => {\n      return {\n        ...v,\n        width: width,\n        height: height - bbtnHeight\n      };\n    });\n  };\n\n  //ロード時にコンポネーントのwidth,heightを取得\n  useEffect(getMapsize, []);\n\n  /*\n  //データロード\n  useEffect(()=>{\n\t\tconst fetchValueData = async (url) => {\n      const result = await d3csv(DATA_URL, csvcast);\n      console.log(result)\n\t\t\tsetData(result);\n\t\t};\n\t\tfetchValueData();\n    \n  }, []);\n  */\n\n useEffect(()=>{\n\t\t//地価データ取得\n\t\tconst fetchData = async (url) => {\n\t\t\tconst buff = await parse(fetchFile(url), ZipLoader);\n\t\t\tconst key = Object.keys(buff)[0];\n\t\t\tdecodeText(buff[key]).then((text) => {\n\t\t\t\tsetData(csvParse(text, csvcast));\n\t\t\t});\n\t\t};\n    fetchData(DATA_URL);  \n    \n  }, []);\n\n  //resize\n  useEffect(() => {\n    window.addEventListener(\"resize\", getMapsize);\n    return () => window.removeEventListener(\"resize\", getMapsize);\n  }, []);\n\n  return (\n    <>\n      <div id=\"header\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">医療提供体制の状況</Typography>\n          </Toolbar>\n        </AppBar>\n        <CheckBoxs changeCheckbox={handleChangeCheckbox} />\n      </div>\n      <div id=\"panel\"></div>\n      <div id=\"map\" ref={mapRef}>\n        <MapGL\n          style={{}}\n          {...viewport}\n          mapStyle={\"mapbox://styles/mapbox/streets-v11\"}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          onViewportChange={v => setViewport(v)}\n        />\n      </div>\n\n      <div id=\"bottom\" ref={bbtnRef}>\n        <BottomBtn changeBottomBtn={handleChangeBottomBtn} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n/*\n \n\n        */\n"]},"metadata":{},"sourceType":"module"}