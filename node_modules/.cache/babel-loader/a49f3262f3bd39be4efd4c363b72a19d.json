{"ast":null,"code":"var _jsxFileName = \"/Users/idg08/Desktop/works/hospital/src/App.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MapGL from \"react-map-gl\";\nimport DeckGL, { MapController } from \"deck.gl\";\nimport layers from \"./components/Layers\";\nimport CheckBoxs from \"./components/CheckBoxs\";\nimport BottomBtn from \"./components/BottomBtn\";\nimport SimpleModal from \"./components/modal\";\nimport { parse, fetchFile } from '@loaders.gl/core';\nimport { ZipLoader } from '@loaders.gl/zip';\nimport decodeText from './components/DecodeText.js';\nimport { csvParse } from 'd3-dsv'; //mapboxのトークンは自分で取得したものに変更してください。\n//このトークンは突然使えなくなる可能性があります。\n\nconst MAPBOX_TOKEN = \"pk.eyJ1Ijoic2hpbWl6dSIsImEiOiJjam95MDBhamYxMjA1M2tyemk2aHMwenp5In0.i2kMIJulhyPLwp3jiLlpsA\";\nconst DATA_URL = \"data/covid-19_daily_survey.zip\";\nconst data_order = {\n  \"通常\": 3,\n  \"制限\": 2,\n  \"停止\": 1,\n  \"設置なし\": 4,\n  \"未回答\": 5\n}; //data convert fnction\n\nconst csvcast = (d, i) => {\n  d.id = d.code;\n  Object.keys(d).forEach(key => {\n    if (!isNaN(+d[key]) && key !== 'id') d[key] = +d[key];\n  });\n  return d;\n};\n\nfunction App() {\n  const mapRef = useRef(null);\n  const bbtnRef = useRef(null);\n  const [data, setData] = useState(null);\n  const [cursor, setCursor] = useState(\"move\");\n  const [hospitalState, setHospitalState] = useState({\n    normal: true,\n    restriction: true,\n    stop: true,\n    nobeds: true,\n    unanswered: true\n  });\n  const [layerType, setLayerType] = useState(\"point\");\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    longitude: 139.0110974,\n    latitude: 36.3226885,\n    zoom: 6,\n    maxZoom: 20\n  });\n  const [modalBody, setModalbody] = useState(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  const getMapsize = () => {\n    const width = mapRef.current ? mapRef.current.offsetWidth : 0;\n    const height = mapRef.current ? mapRef.current.offsetHeight : 0;\n    const bbtnHeight = bbtnRef.current ? bbtnRef.current.offsetHeight : 0;\n    setViewport(v => {\n      return { ...v,\n        width: width,\n        height: height - bbtnHeight\n      };\n    });\n  }; //ロード時にコンポネーントのwidth,heightを取得\n\n\n  useEffect(getMapsize, []);\n  useEffect(() => {\n    //地価データ取得\n    const fetchData = async url => {\n      const buff = await parse(fetchFile(url), ZipLoader);\n      const key = Object.keys(buff)[0];\n      decodeText(buff[key]).then(text => {\n        const loadData = csvParse(text, csvcast);\n        loadData.sort((a, b) => data_order[b[\"医療区分回答\"]] - data_order[a[\"医療区分回答\"]]);\n        setData(loadData);\n      });\n    };\n\n    fetchData(DATA_URL);\n  }, []); //resize\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getMapsize);\n    return () => window.removeEventListener(\"resize\", getMapsize);\n  }, []);\n\n  const handlerOnHover = e => {\n    const cur = e.object ? \"pointer\" : \"move\";\n    setCursor(cur);\n  };\n\n  const handlerOnClickLayer = e => {\n    console.log(e);\n    setModalbody( /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, \"test\"));\n    setModalOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"\\u533B\\u7642\\u63D0\\u4F9B\\u4F53\\u5236\\u306E\\u72B6\\u6CC1\"))), /*#__PURE__*/React.createElement(CheckBoxs, {\n    value: hospitalState,\n    onChange: setHospitalState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SimpleModal, {\n    body: modalBody,\n    state: modalOpen,\n    handler: setModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    ref: mapRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MapGL, Object.assign({\n    style: {}\n  }, viewport, {\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    mapboxApiAccessToken: MAPBOX_TOKEN,\n    onViewportChange: v => setViewport(v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DeckGL, {\n    getCursor: () => cursor,\n    layers: layers({\n      data,\n      layerType: layerType,\n      hospitalState: hospitalState,\n      onHover: handlerOnHover,\n      onClick: handlerOnClickLayer\n    }),\n    controller: {\n      type: MapController,\n      dragRotate: false\n    },\n    initialViewState: viewport,\n    controller: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bottom\",\n    ref: bbtnRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BottomBtn, {\n    value: layerType,\n    onChange: setLayerType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;\n/*\n \n\n        */","map":{"version":3,"sources":["/Users/idg08/Desktop/works/hospital/src/App.js"],"names":["React","useEffect","useState","useRef","AppBar","Toolbar","Typography","MapGL","DeckGL","MapController","layers","CheckBoxs","BottomBtn","SimpleModal","parse","fetchFile","ZipLoader","decodeText","csvParse","MAPBOX_TOKEN","DATA_URL","data_order","csvcast","d","i","id","code","Object","keys","forEach","key","isNaN","App","mapRef","bbtnRef","data","setData","cursor","setCursor","hospitalState","setHospitalState","normal","restriction","stop","nobeds","unanswered","layerType","setLayerType","viewport","setViewport","width","window","innerWidth","height","innerHeight","longitude","latitude","zoom","maxZoom","modalBody","setModalbody","modalOpen","setModalOpen","getMapsize","current","offsetWidth","offsetHeight","bbtnHeight","v","fetchData","url","buff","then","text","loadData","sort","a","b","addEventListener","removeEventListener","handlerOnHover","e","cur","object","handlerOnClickLayer","console","log","onHover","onClick","type","dragRotate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport MapGL from \"react-map-gl\";\nimport DeckGL, { MapController } from \"deck.gl\";\nimport layers from \"./components/Layers\";\n\n\nimport CheckBoxs from \"./components/CheckBoxs\";\nimport BottomBtn from \"./components/BottomBtn\";\nimport SimpleModal from \"./components/modal\";\n\n\nimport { parse, fetchFile } from '@loaders.gl/core';\nimport { ZipLoader } from '@loaders.gl/zip';\nimport decodeText from './components/DecodeText.js';\nimport { csvParse } from 'd3-dsv';\n\n\n\n//mapboxのトークンは自分で取得したものに変更してください。\n//このトークンは突然使えなくなる可能性があります。\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1Ijoic2hpbWl6dSIsImEiOiJjam95MDBhamYxMjA1M2tyemk2aHMwenp5In0.i2kMIJulhyPLwp3jiLlpsA\";\n\n  const DATA_URL = \"data/covid-19_daily_survey.zip\";\n\n  const data_order = {\n    \"通常\":3,\n    \"制限\":2,\n    \"停止\":1,\n    \"設置なし\":4,\n    \"未回答\":5,\n}\n\n//data convert fnction\nconst  csvcast = (d, i) => {\n\td.id = d.code;\n\tObject.keys(d).forEach((key) => {\n\t\tif (!isNaN(+d[key]) && key !== 'id') d[key] = +d[key];\n\t});\n\treturn d;\n};\n\n\n\nfunction App() {\n  const mapRef = useRef(null);\n  const bbtnRef = useRef(null);\n  const [data, setData] = useState(null);\n\n  const [cursor, setCursor] = useState(\"move\");\n\n  const [hospitalState, setHospitalState]  = useState({\n    normal: true,\n    restriction: true,\n    stop: true,\n    nobeds: true,\n    unanswered: true\n  });\n\n  const [layerType, setLayerType]  = useState(\"point\");\n\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    longitude: 139.0110974,\n    latitude: 36.3226885,\n    zoom: 6,\n    maxZoom: 20\n  });\n\n  const [modalBody, setModalbody]  = useState(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  const getMapsize = () => {\n    const width = mapRef.current ? mapRef.current.offsetWidth : 0;\n    const height = mapRef.current ? mapRef.current.offsetHeight : 0;\n    const bbtnHeight = bbtnRef.current ? bbtnRef.current.offsetHeight : 0;\n\n    setViewport(v => {\n      return {\n        ...v,\n        width: width,\n        height: height - bbtnHeight\n      };\n    });\n  };\n\n  //ロード時にコンポネーントのwidth,heightを取得\n  useEffect(getMapsize, []);\n\n useEffect(()=>{\n\t\t//地価データ取得\n\t\tconst fetchData = async (url) => {\n\t\t\tconst buff = await parse(fetchFile(url), ZipLoader);\n\t\t\tconst key = Object.keys(buff)[0];\n\t\t\tdecodeText(buff[key]).then((text) => {\n        const loadData = csvParse(text, csvcast);\n        loadData.sort((a,b)=> data_order[b[\"医療区分回答\"]] - data_order[a[\"医療区分回答\"]]);\n\t\t\t\tsetData(loadData);\n\t\t\t});\n\t\t};\n    fetchData(DATA_URL);  \n    \n  }, []);\n\n  //resize\n  useEffect(() => {\n    window.addEventListener(\"resize\", getMapsize);\n    return () => window.removeEventListener(\"resize\", getMapsize);\n  }, []);\n\n  const handlerOnHover = (e) => {\n    const cur = (e.object) ? \"pointer\" : \"move\";\n    setCursor(cur);\n  }\n\n  const handlerOnClickLayer = (e) => {\n    console.log(e)\n    setModalbody((<p>test</p>));\n    setModalOpen(true)\n  }\n\n  return (\n    <>\n      <div id=\"header\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">医療提供体制の状況</Typography>\n          </Toolbar>\n        </AppBar>\n        <CheckBoxs value={hospitalState} onChange={setHospitalState} />\n        <SimpleModal body={modalBody} state={modalOpen} handler={setModalOpen}/>\n      </div>\n      <div id=\"panel\"></div>\n      <div id=\"map\" ref={mapRef}>\n        <MapGL\n          style={{}}\n          {...viewport}\n          mapStyle={\"mapbox://styles/mapbox/streets-v11\"}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          onViewportChange={v => setViewport(v)}\n        >\n          <DeckGL\n          getCursor={() => cursor}\n            layers={layers({\n              data,\n              layerType:layerType,\n              hospitalState:hospitalState,\n              onHover:handlerOnHover,\n              onClick:handlerOnClickLayer\n            })}\n            controller={{ type: MapController, dragRotate: false }}\n            initialViewState={viewport}\n            controller={true}\n          />\n        </MapGL>\n\n      </div>\n\n      <div id=\"bottom\" ref={bbtnRef}>\n        <BottomBtn value={layerType} onChange={setLayerType} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n/*\n \n\n        */\n"]},"metadata":{},"sourceType":"module"}