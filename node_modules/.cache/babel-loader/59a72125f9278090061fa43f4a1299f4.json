{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/esm/wrapNativeSuper\";\n\nvar ArrayQueue = function (_Array) {\n  _inherits(ArrayQueue, _Array);\n\n  function ArrayQueue() {\n    _classCallCheck(this, ArrayQueue);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ArrayQueue).apply(this, arguments));\n  }\n\n  _createClass(ArrayQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      return this.push(value);\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      return this.shift();\n    }\n  }]);\n\n  return ArrayQueue;\n}(_wrapNativeSuper(Array));\n\nexport function takeAsync(_x) {\n  return _takeAsync.apply(this, arguments);\n}\n\nfunction _takeAsync() {\n  _takeAsync = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(asyncIterable) {\n    var count,\n        result,\n        iterator,\n        _ref,\n        value,\n        done,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            count = _args.length > 1 && _args[1] !== undefined ? _args[1] : Infinity;\n            result = [];\n            iterator = asyncIterable[Symbol.asyncIterator]();\n\n          case 3:\n            if (!(result.length < count)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 6;\n            return iterator.next();\n\n          case 6:\n            _ref = _context.sent;\n            value = _ref.value;\n            done = _ref.done;\n\n            if (!done) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"break\", 14);\n\n          case 11:\n            result.push(value);\n            _context.next = 3;\n            break;\n\n          case 14:\n            return _context.abrupt(\"return\", result);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _takeAsync.apply(this, arguments);\n}\n\nvar AsyncQueue = function () {\n  function AsyncQueue() {\n    _classCallCheck(this, AsyncQueue);\n\n    this._values = new ArrayQueue();\n    this._settlers = new ArrayQueue();\n    this._closed = false;\n  }\n\n  _createClass(AsyncQueue, [{\n    key: \"close\",\n    value: function close() {\n      while (this._settlers.length > 0) {\n        this._settlers.dequeue().resolve({\n          done: true\n        });\n      }\n\n      this._closed = true;\n    }\n  }, {\n    key: Symbol.asyncIterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      if (this._closed) {\n        throw new Error('Closed');\n      }\n\n      if (this._settlers.length > 0) {\n        if (this._values.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n\n        var settler = this._settlers.dequeue();\n\n        if (value instanceof Error) {\n          settler.reject(value);\n        } else {\n          settler.resolve({\n            value: value\n          });\n        }\n      } else {\n        this._values.enqueue(value);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _this = this;\n\n      if (this._values.length > 0) {\n        var value = this._values.dequeue();\n\n        if (value instanceof Error) {\n          return Promise.reject(value);\n        }\n\n        return Promise.resolve({\n          value: value\n        });\n      }\n\n      if (this._closed) {\n        if (this._settlers.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n\n        return Promise.resolve({\n          done: true\n        });\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this._settlers.enqueue({\n          resolve: resolve,\n          reject: reject\n        });\n      });\n    }\n  }]);\n\n  return AsyncQueue;\n}();\n\nexport { AsyncQueue as default };","map":{"version":3,"sources":["../../../../src/lib/utils/async-queue.js"],"names":["ArrayQueue","Array","value","count","result","iterator","asyncIterable","Symbol","done","AsyncQueue","asyncIterator","settler","Promise","resolve","reject"],"mappings":"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","sourcesContent":["// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\nclass ArrayQueue extends Array {\n  enqueue(value) {\n    // Add at the end\n    return this.push(value);\n  }\n  dequeue() {\n    // Remove first element\n    return this.shift();\n  }\n}\n\n/**\n * @returns a Promise for an Array with the elements\n * in `asyncIterable`\n */\nexport async function takeAsync(asyncIterable, count = Infinity) {\n  const result = [];\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  while (result.length < count) {\n    const {value, done} = await iterator.next();\n    if (done) {\n      break;\n    }\n    result.push(value);\n  }\n  return result;\n}\n\nexport default class AsyncQueue {\n  constructor() {\n    // enqueues > dequeues\n    this._values = new ArrayQueue();\n    // dequeues > enqueues\n    this._settlers = new ArrayQueue();\n    this._closed = false;\n  }\n\n  close() {\n    while (this._settlers.length > 0) {\n      this._settlers.dequeue().resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n\n  enqueue(value) {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.dequeue();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.enqueue(value);\n    }\n  }\n\n  /**\n   * @returns a Promise for an IteratorResult\n   */\n  next() {\n    if (this._values.length > 0) {\n      const value = this._values.dequeue();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({value});\n    }\n\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true});\n    }\n    // Wait for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.enqueue({resolve, reject});\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}