{"ast":null,"code":"var _jsxFileName = \"/Users/idg08/Desktop/works/hospital/src/components/CheckBoxs.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst CostuomFormControlLabel = withStyles({\n  root: {\n    padding: 0,\n    margin: 0\n  }\n})(props => /*#__PURE__*/React.createElement(FormControlLabel, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 15\n  }\n})));\nconst GreenCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.5em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"#17bebb\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 15\n  }\n})));\nconst YellowCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"#eec643\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 15\n  }\n})));\nconst RedCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"#d62246\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 15\n  }\n})));\nconst Gray1Checkbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"#c0c0c0\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 15\n  }\n})));\nconst Gray2Checkbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"##898989\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 15\n  }\n})));\n\nfunction CheckBoxs(props) {\n  const {\n    changeCheckbox\n  } = props;\n  const [value, setValue] = useState({\n    normal: true,\n    restriction: true,\n    stop: true,\n    nobeds: true,\n    unanswered: true\n  });\n\n  const handleChange = event => {\n    setValue({ ...value,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  useEffect(() => changeCheckbox(value), [value]);\n  return /*#__PURE__*/React.createElement(Box, {\n    elevation: 3,\n    id: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      checked: value.normal,\n      onChange: handleChange,\n      name: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 22\n      }\n    }),\n    label: \"\\u901A\\u5E38\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(YellowCheckbox, {\n      checked: value.restriction,\n      onChange: handleChange,\n      name: \"restriction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 22\n      }\n    }),\n    label: \"\\u5236\\u9650\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(RedCheckbox, {\n      checked: value.stop,\n      onChange: handleChange,\n      name: \"stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 22\n      }\n    }),\n    label: \"\\u505C\\u6B62\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Gray1Checkbox, {\n      checked: value.nobeds,\n      onChange: handleChange,\n      name: \"nobeds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 22\n      }\n    }),\n    label: \"\\u8A2D\\u7F6E\\u306A\\u3057\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Gray2Checkbox, {\n      checked: value.unanswered,\n      onChange: handleChange,\n      name: \"unanswered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 22\n      }\n    }),\n    label: \"\\u672A\\u56DE\\u7B54\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default CheckBoxs;","map":{"version":3,"sources":["/Users/idg08/Desktop/works/hospital/src/components/CheckBoxs.js"],"names":["React","useEffect","useState","makeStyles","withStyles","Paper","Box","FormGroup","FormControlLabel","Checkbox","CostuomFormControlLabel","root","padding","margin","props","GreenCheckbox","marginLeft","color","checked","YellowCheckbox","RedCheckbox","Gray1Checkbox","Gray2Checkbox","CheckBoxs","changeCheckbox","value","setValue","normal","restriction","stop","nobeds","unanswered","handleChange","event","target","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst CostuomFormControlLabel  = withStyles({\n  root: {\n    padding:0,\n    margin:0,\n  },\n})((props) => <FormControlLabel color=\"default\" {...props} />);\n\n\nconst GreenCheckbox = withStyles({\n  root: {\n    padding:0,\n    marginLeft:\"0.5em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"#17bebb\",\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst YellowCheckbox = withStyles({\n  root: {\n    padding:0,\n    marginLeft:\"0.25em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"#eec643\",\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst RedCheckbox = withStyles({\n  root: {\n    padding:0,\n    marginLeft:\"0.25em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"#d62246\",\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst Gray1Checkbox = withStyles({\n  root: {\n    padding:0,\n    marginLeft:\"0.25em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"#c0c0c0\",\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst Gray2Checkbox = withStyles({\n  root: {\n    padding:0,\n    marginLeft:\"0.25em\",\n    color: \"gray\",\n    '&$checked': {\n      color: \"##898989\",\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\n\n\nfunction CheckBoxs(props) {\n  const {changeCheckbox} = props;\n\n  const [value, setValue] = useState({\n    normal: true,\n    restriction: true,\n    stop: true,\n    nobeds: true,\n    unanswered: true,\n  });\n\n  const handleChange = (event) => {\n    setValue({ ...value, [event.target.name]: event.target.checked });\n  };\n\n  useEffect(() => changeCheckbox(value) ,[value]);\n\n  return (\n    <Box elevation={3} id=\"panel\" >\n      <FormGroup row>\n          <CostuomFormControlLabel\n            control={<GreenCheckbox checked={value.normal} onChange={handleChange} name=\"normal\" />}\n            label=\"通常\"\n          />\n          <CostuomFormControlLabel\n            control={<YellowCheckbox checked={value.restriction} onChange={handleChange} name=\"restriction\"  />}\n            label=\"制限\"\n          />\n          <CostuomFormControlLabel\n            control={<RedCheckbox checked={value.stop} onChange={handleChange} name=\"stop\" />}\n            label=\"停止\"\n          />\n          <CostuomFormControlLabel\n            control={<Gray1Checkbox checked={value.nobeds} onChange={handleChange} name=\"nobeds\" />}\n            label=\"設置なし\"\n          />              \n          <CostuomFormControlLabel\n            control={<Gray2Checkbox checked={value.unanswered} onChange={handleChange} name=\"unanswered\" />}\n            label=\"未回答\"\n          />              \n        </FormGroup>\n\n    </Box>\n  )\n}\n\nexport default CheckBoxs;\n"]},"metadata":{},"sourceType":"module"}