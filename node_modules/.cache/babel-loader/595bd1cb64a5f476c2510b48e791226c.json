{"ast":null,"code":"var _jsxFileName = \"/Users/idg08/Desktop/works/hospital/src/App.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport MapGL from \"react-map-gl\";\nimport ControllPanel from './ControllPanel'; //mapboxのトークンは自分で取得したものに変更してください。\n//このトークンは突然使えなくなる可能性があります。\n\nconst MAPBOX_TOKEN = \"pk.eyJ1Ijoic2hpbWl6dSIsImEiOiJjam95MDBhamYxMjA1M2tyemk2aHMwenp5In0.i2kMIJulhyPLwp3jiLlpsA\";\nconst useHeaderStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 9999\n  },\n  title: {\n    flexGrow: 1\n  },\n  panel: {\n    margin: 20\n  }\n}));\nconst useMapStyles = makeStyles(theme => ({\n  root: {\n    position: \"absolute\",\n    top: 0,\n    backgroundColor: \"red\"\n  }\n}));\n\nfunction App() {\n  const headerClasses = useHeaderStyles();\n  const mapClasses = useMapStyles();\n  const ref = useRef(null); //コンポーネントのwidth,height取得用\n\n  const [viewport, setViewport] = useState({\n    width: 400,\n    //window.innerWidth,\n    height: 400,\n    //window.innerHeight,\n    longitude: 139.0110974,\n    latitude: 36.3226885,\n    zoom: 6,\n    maxZoom: 20\n  }); //ロード時にコンポネーントのwidth,heightを取得\n\n  useEffect(() => {\n    const width = ref.current ? ref.current.offsetWidth : 0;\n    const height = ref.current ? ref.current.offsetHeight : 0;\n    console.log(width, height);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: headerClasses.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"\\u533B\\u7642\\u63D0\\u4F9B\\u4F53\\u5236\\u306E\\u72B6\\u6CC1\"))), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ControllPanel, {\n    className: headerClasses.panel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    className: mapClasses.root,\n    id: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default App;\n/*\n   <MapGL\n          {...viewport}\n          mapStyle={\"mapbox://styles/mapbox/streets-v11\"}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          onViewportChange={v => setViewport(v)}\n        />   \n\n        */","map":{"version":3,"sources":["/Users/idg08/Desktop/works/hospital/src/App.js"],"names":["React","useEffect","useState","useRef","makeStyles","withStyles","AppBar","Toolbar","Typography","Box","MapGL","ControllPanel","MAPBOX_TOKEN","useHeaderStyles","theme","root","zIndex","title","flexGrow","panel","margin","useMapStyles","position","top","backgroundColor","App","headerClasses","mapClasses","ref","viewport","setViewport","width","height","longitude","latitude","zoom","maxZoom","current","offsetWidth","offsetHeight","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState ,useRef } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport MapGL from \"react-map-gl\";\n\nimport ControllPanel from './ControllPanel';\n\n\n//mapboxのトークンは自分で取得したものに変更してください。\n//このトークンは突然使えなくなる可能性があります。\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1Ijoic2hpbWl6dSIsImEiOiJjam95MDBhamYxMjA1M2tyemk2aHMwenp5In0.i2kMIJulhyPLwp3jiLlpsA\";\n\n\nconst useHeaderStyles = makeStyles((theme) => ({\n  root: {\n    zIndex:9999\n  },\n  title: {\n    flexGrow: 1,\n  },\n  panel: {\n    margin:20,\n  }\n}));\n\n\nconst useMapStyles = makeStyles((theme) => ({\n  root: {\n    position:\"absolute\",\n    top:0,\n    backgroundColor:\"red\",\n  },\n}));\n\n\nfunction App() {\n  const headerClasses = useHeaderStyles();\n  const mapClasses = useMapStyles();\n\n\n  const ref = useRef(null); //コンポーネントのwidth,height取得用\n\n\n  const [viewport, setViewport] = useState \n  ({\n    width:400,//window.innerWidth,\n    height:400,//window.innerHeight,\n    longitude: 139.0110974,\n    latitude: 36.3226885,\n    zoom: 6,\n    maxZoom: 20,\n  })\n\n\t//ロード時にコンポネーントのwidth,heightを取得\n\tuseEffect(() => {\n\t\tconst width = ref.current ? ref.current.offsetWidth : 0;\n    const height = ref.current ? ref.current.offsetHeight : 0;\n    console.log(width,height)\n    \n  },[])\n\n  return (\n    <>\n    <div id=\"header\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={headerClasses.title}>\n          医療提供体制の状況\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box>\n      <ControllPanel  className={headerClasses.panel}></ControllPanel>\n\n      </Box>\n    </div>\n\n\n    <Box ref={ref} className={mapClasses.root} id=\"map\">\n      \n    </Box>\n\n\n\n\n    </>\n\n  )\n}\n\nexport default App;\n\n/*\n   <MapGL\n          {...viewport}\n          mapStyle={\"mapbox://styles/mapbox/streets-v11\"}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          onViewportChange={v => setViewport(v)}\n        />   \n\n        */"]},"metadata":{},"sourceType":"module"}