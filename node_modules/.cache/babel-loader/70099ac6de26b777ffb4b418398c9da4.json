{"ast":null,"code":"import { ScatterplotLayer, HexagonLayer } from \"deck.gl\";\nconst scatterColor = {\n  \"通常\": [23, 190, 187],\n  \"制限\": [238, 198, 67],\n  \"停止\": [214, 34, 70],\n  \"設置なし\": [192, 192, 192],\n  \"未回答\": [137, 137, 137]\n};\nexport default (props => {\n  const {\n    data,\n    layerType,\n    hospitalState\n  } = props;\n  console.log(data);\n  if (!data) return;\n  const scatter = new ScatterplotLayer({\n    id: \"scatterplot-layer\",\n    data,\n    pickable: true,\n    opacity: 0.8,\n    stroked: true,\n    filled: true,\n    radiusScale: 6,\n    radiusMinPixels: 1,\n    radiusMaxPixels: 100,\n    lineWidthMinPixels: 1,\n    getPosition: d => [d[\"経度\"], d[\"緯度\"]],\n    getRadius: d => Math.sqrt(d.exits),\n    getFillColor: d => scatterColor[d[\"医療区分回答\"]],\n    getLineColor: d => [0, 0, 0],\n    onHover: ({\n      object,\n      x,\n      y\n    }) => {\n      console.log(object);\n    }\n  });\n  const hex = new HexagonLayer({\n    id: \"hexagon-layer\",\n    data,\n    pickable: true,\n    extruded: true,\n    radius: 200,\n    elevationScale: 4,\n    getPosition: d => d.COORDINATES,\n    onHover: ({\n      object,\n      x,\n      y\n    }) => {\n      console.log(object);\n    }\n  });\n  const layers = [scatter];\n  return layers;\n});","map":{"version":3,"sources":["/Users/idg08/Desktop/works/hospital/src/components/Layers.js"],"names":["ScatterplotLayer","HexagonLayer","scatterColor","props","data","layerType","hospitalState","console","log","scatter","id","pickable","opacity","stroked","filled","radiusScale","radiusMinPixels","radiusMaxPixels","lineWidthMinPixels","getPosition","d","getRadius","Math","sqrt","exits","getFillColor","getLineColor","onHover","object","x","y","hex","extruded","radius","elevationScale","COORDINATES","layers"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,YAA3B,QAA+C,SAA/C;AAEA,MAAMC,YAAY,GAAG;AACjB,QAAK,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,CADY;AAEjB,QAAK,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,CAFY;AAGjB,QAAK,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,CAHY;AAIjB,UAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAJU;AAKjB,SAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AALW,CAArB;AASA,gBAAeC,KAAK,IAAI;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAoBC,IAAAA;AAApB,MAAqCH,KAA3C;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,MAAI,CAACA,IAAL,EAAW;AAEX,QAAMK,OAAO,GAAG,IAAIT,gBAAJ,CAAqB;AACnCU,IAAAA,EAAE,EAAE,mBAD+B;AAEnCN,IAAAA,IAFmC;AAGnCO,IAAAA,QAAQ,EAAE,IAHyB;AAInCC,IAAAA,OAAO,EAAE,GAJ0B;AAKnCC,IAAAA,OAAO,EAAE,IAL0B;AAMnCC,IAAAA,MAAM,EAAE,IAN2B;AAOnCC,IAAAA,WAAW,EAAE,CAPsB;AAQnCC,IAAAA,eAAe,EAAE,CARkB;AASnCC,IAAAA,eAAe,EAAE,GATkB;AAUnCC,IAAAA,kBAAkB,EAAE,CAVe;AAWnCC,IAAAA,WAAW,EAAEC,CAAC,IAAI,CAACA,CAAC,CAAC,IAAD,CAAF,EAASA,CAAC,CAAC,IAAD,CAAV,CAXiB;AAYnCC,IAAAA,SAAS,EAAED,CAAC,IAAIE,IAAI,CAACC,IAAL,CAAUH,CAAC,CAACI,KAAZ,CAZmB;AAanCC,IAAAA,YAAY,EAAEL,CAAC,IAAIlB,YAAY,CAACkB,CAAC,CAAC,QAAD,CAAF,CAbI;AAcnCM,IAAAA,YAAY,EAAEN,CAAC,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAdgB;AAenCO,IAAAA,OAAO,EAAE,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,CAAV;AAAaC,MAAAA;AAAb,KAAD,KAAsB;AAC7BvB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,MAAZ;AACD;AAjBkC,GAArB,CAAhB;AAoBA,QAAMG,GAAG,GAAG,IAAI9B,YAAJ,CAAiB;AAC3BS,IAAAA,EAAE,EAAE,eADuB;AAE3BN,IAAAA,IAF2B;AAG3BO,IAAAA,QAAQ,EAAE,IAHiB;AAI3BqB,IAAAA,QAAQ,EAAE,IAJiB;AAK3BC,IAAAA,MAAM,EAAE,GALmB;AAM3BC,IAAAA,cAAc,EAAE,CANW;AAO3Bf,IAAAA,WAAW,EAAEC,CAAC,IAAIA,CAAC,CAACe,WAPO;AAQ3BR,IAAAA,OAAO,EAAE,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,CAAV;AAAaC,MAAAA;AAAb,KAAD,KAAsB;AAC7BvB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,MAAZ;AACD;AAV0B,GAAjB,CAAZ;AAaA,QAAMQ,MAAM,GAAG,CAAC3B,OAAD,CAAf;AAEA,SAAO2B,MAAP;AACD,CA1CD","sourcesContent":["import { ScatterplotLayer, HexagonLayer } from \"deck.gl\";\n\nconst scatterColor = {\n    \"通常\":[23, 190, 187],\n    \"制限\":[238, 198, 67],\n    \"停止\":[214, 34, 70],\n    \"設置なし\":[192, 192, 192],\n    \"未回答\":[137, 137, 137],\n}\n\n\nexport default props => {\n  const { data, layerType,  hospitalState} = props;\n  console.log(data)\n\n  if (!data) return;\n\n  const scatter = new ScatterplotLayer({\n    id: \"scatterplot-layer\",\n    data,\n    pickable: true,\n    opacity: 0.8,\n    stroked: true,\n    filled: true,\n    radiusScale: 6,\n    radiusMinPixels: 1,\n    radiusMaxPixels: 100,\n    lineWidthMinPixels: 1,\n    getPosition: d => [d[\"経度\"],d[\"緯度\"]],\n    getRadius: d => Math.sqrt(d.exits),\n    getFillColor: d => scatterColor[d[\"医療区分回答\"]],\n    getLineColor: d => [0, 0, 0],\n    onHover: ({ object, x, y }) => {\n      console.log(object);\n    }\n  });\n\n  const hex = new HexagonLayer({\n    id: \"hexagon-layer\",\n    data,\n    pickable: true,\n    extruded: true,\n    radius: 200,\n    elevationScale: 4,\n    getPosition: d => d.COORDINATES,\n    onHover: ({ object, x, y }) => {\n      console.log(object);\n    }\n  });\n\n  const layers = [scatter];\n\n  return layers;\n};\n"]},"metadata":{},"sourceType":"module"}