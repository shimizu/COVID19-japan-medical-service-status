{"ast":null,"code":"import { ScatterplotLayer, HexagonLayer } from \"deck.gl\";\nconst scatterColor = {\n  \"通常\": [23, 190, 187],\n  \"制限\": [238, 198, 67],\n  \"停止\": [214, 34, 70],\n  \"設置なし\": [192, 192, 192],\n  \"未回答\": [137, 137, 137]\n};\nexport default (props => {\n  const {\n    data,\n    layerType,\n    hospitalState\n  } = props; //console.log(data)\n\n  if (!data) return;\n  const scatter = new ScatterplotLayer({\n    id: \"scatterplot-layer\",\n    data,\n    pickable: true,\n    opacity: 0.5,\n    stroked: true,\n    filled: true,\n    radiusScale: 1,\n    radiusMinPixels: 6,\n    lineWidthMinPixels: 1,\n    getPosition: d => [d[\"経度\"], d[\"緯度\"]],\n    getRadius: 0,\n    getFillColor: d => scatterColor[d[\"医療区分回答\"]],\n    getLineColor: d => scatterColor[d[\"医療区分回答\"]],\n    onHover: ({\n      object,\n      x,\n      y\n    }) => {\n      console.log(object);\n    }\n  });\n  const hex = new HexagonLayer({\n    id: \"hexagon-layer\",\n    data,\n    pickable: true,\n    extruded: true,\n    radius: 200,\n    elevationScale: 4,\n    getPosition: d => [d[\"経度\"], d[\"緯度\"]],\n    onHover: ({\n      object,\n      x,\n      y\n    }) => {\n      console.log(object);\n    }\n  });\n  const layers = [hex];\n  return layers;\n});","map":{"version":3,"sources":["/Users/idg08/Desktop/works/hospital/src/components/Layers.js"],"names":["ScatterplotLayer","HexagonLayer","scatterColor","props","data","layerType","hospitalState","scatter","id","pickable","opacity","stroked","filled","radiusScale","radiusMinPixels","lineWidthMinPixels","getPosition","d","getRadius","getFillColor","getLineColor","onHover","object","x","y","console","log","hex","extruded","radius","elevationScale","layers"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,YAA3B,QAA+C,SAA/C;AAEA,MAAMC,YAAY,GAAG;AACjB,QAAK,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,CADY;AAEjB,QAAK,CAAC,GAAD,EAAM,GAAN,EAAW,EAAX,CAFY;AAGjB,QAAK,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,CAHY;AAIjB,UAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAJU;AAKjB,SAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AALW,CAArB;AASA,gBAAeC,KAAK,IAAI;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAoBC,IAAAA;AAApB,MAAqCH,KAA3C,CADsB,CAEtB;;AAEA,MAAI,CAACC,IAAL,EAAW;AAEX,QAAMG,OAAO,GAAG,IAAIP,gBAAJ,CAAqB;AACnCQ,IAAAA,EAAE,EAAE,mBAD+B;AAEnCJ,IAAAA,IAFmC;AAGnCK,IAAAA,QAAQ,EAAE,IAHyB;AAInCC,IAAAA,OAAO,EAAE,GAJ0B;AAKnCC,IAAAA,OAAO,EAAE,IAL0B;AAMnCC,IAAAA,MAAM,EAAE,IAN2B;AAOnCC,IAAAA,WAAW,EAAE,CAPsB;AAQnCC,IAAAA,eAAe,EAAE,CARkB;AASnCC,IAAAA,kBAAkB,EAAE,CATe;AAUnCC,IAAAA,WAAW,EAAEC,CAAC,IAAI,CAACA,CAAC,CAAC,IAAD,CAAF,EAASA,CAAC,CAAC,IAAD,CAAV,CAViB;AAWnCC,IAAAA,SAAS,EAAE,CAXwB;AAYnCC,IAAAA,YAAY,EAAEF,CAAC,IAAIf,YAAY,CAACe,CAAC,CAAC,QAAD,CAAF,CAZI;AAanCG,IAAAA,YAAY,EAAEH,CAAC,IAAIf,YAAY,CAACe,CAAC,CAAC,QAAD,CAAF,CAbI;AAcnCI,IAAAA,OAAO,EAAE,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,CAAV;AAAaC,MAAAA;AAAb,KAAD,KAAsB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD;AAhBkC,GAArB,CAAhB;AAmBA,QAAMK,GAAG,GAAG,IAAI1B,YAAJ,CAAiB;AAC3BO,IAAAA,EAAE,EAAE,eADuB;AAE3BJ,IAAAA,IAF2B;AAG3BK,IAAAA,QAAQ,EAAE,IAHiB;AAI3BmB,IAAAA,QAAQ,EAAE,IAJiB;AAK3BC,IAAAA,MAAM,EAAE,GALmB;AAM3BC,IAAAA,cAAc,EAAE,CANW;AAO3Bd,IAAAA,WAAW,EAAEC,CAAC,IAAI,CAACA,CAAC,CAAC,IAAD,CAAF,EAASA,CAAC,CAAC,IAAD,CAAV,CAPS;AAQ3BI,IAAAA,OAAO,EAAE,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,CAAV;AAAaC,MAAAA;AAAb,KAAD,KAAsB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD;AAV0B,GAAjB,CAAZ;AAaA,QAAMS,MAAM,GAAG,CAACJ,GAAD,CAAf;AAEA,SAAOI,MAAP;AACD,CAzCD","sourcesContent":["import { ScatterplotLayer, HexagonLayer } from \"deck.gl\";\n\nconst scatterColor = {\n    \"通常\":[23, 190, 187],\n    \"制限\":[238, 198, 67],\n    \"停止\":[214, 34, 70],\n    \"設置なし\":[192, 192, 192],\n    \"未回答\":[137, 137, 137],\n}\n\n\nexport default props => {\n  const { data, layerType,  hospitalState} = props;\n  //console.log(data)\n\n  if (!data) return;\n\n  const scatter = new ScatterplotLayer({\n    id: \"scatterplot-layer\",\n    data,\n    pickable: true,\n    opacity: 0.5,\n    stroked: true,\n    filled: true,\n    radiusScale: 1,\n    radiusMinPixels: 6,\n    lineWidthMinPixels: 1,\n    getPosition: d => [d[\"経度\"],d[\"緯度\"]],\n    getRadius: 0,\n    getFillColor: d => scatterColor[d[\"医療区分回答\"]],\n    getLineColor: d => scatterColor[d[\"医療区分回答\"]],\n    onHover: ({ object, x, y }) => {\n      console.log(object);\n    }\n  });\n\n  const hex = new HexagonLayer({\n    id: \"hexagon-layer\",\n    data,\n    pickable: true,\n    extruded: true,\n    radius: 200,\n    elevationScale: 4,\n    getPosition: d => [d[\"経度\"],d[\"緯度\"]],\n    onHover: ({ object, x, y }) => {\n      console.log(object);\n    }\n  });\n\n  const layers = [hex];\n\n  return layers;\n};\n"]},"metadata":{},"sourceType":"module"}