{"ast":null,"code":"var _jsxFileName = \"/Users/idg08/Desktop/works/hospital/src/components/CheckBoxs.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nconst CostuomFormControlLabel = withStyles({\n  root: {\n    padding: 0,\n    margin: 0\n  }\n})(props => /*#__PURE__*/React.createElement(FormControlLabel, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }\n})));\nconst GreenCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.5em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#17bebb\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }\n})));\nconst YellowCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#eec643\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }\n})));\nconst RedCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#d62246\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }\n})));\nconst Gray1Checkbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#c0c0c0\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }\n})));\nconst Gray2Checkbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"##898989\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }\n})));\n\nfunction CheckBoxs(props) {\n  const {\n    value,\n    onChange\n  } = props;\n\n  const handleChange = event => {\n    onChange({ ...value,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    elevation: 3,\n    id: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      checked: value.normal,\n      onChange: handleChange,\n      name: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }),\n    label: \"\\u901A\\u5E38\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(YellowCheckbox, {\n      checked: value.restriction,\n      onChange: handleChange,\n      name: \"restriction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }),\n    label: \"\\u5236\\u9650\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(RedCheckbox, {\n      checked: value.stop,\n      onChange: handleChange,\n      name: \"stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }),\n    label: \"\\u505C\\u6B62\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Gray1Checkbox, {\n      checked: value.nobeds,\n      onChange: handleChange,\n      name: \"nobeds\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }),\n    label: \"\\u8A2D\\u7F6E\\u306A\\u3057\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CostuomFormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Gray2Checkbox, {\n      checked: value.unanswered,\n      onChange: handleChange,\n      name: \"unanswered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }),\n    label: \"\\u672A\\u56DE\\u7B54\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default CheckBoxs;","map":{"version":3,"sources":["/Users/idg08/Desktop/works/hospital/src/components/CheckBoxs.js"],"names":["React","useEffect","useState","makeStyles","withStyles","Paper","Box","FormGroup","FormControlLabel","Checkbox","CostuomFormControlLabel","root","padding","margin","props","GreenCheckbox","marginLeft","color","checked","YellowCheckbox","RedCheckbox","Gray1Checkbox","Gray2Checkbox","CheckBoxs","value","onChange","handleChange","event","target","name","normal","restriction","stop","nobeds","unanswered"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\n\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst CostuomFormControlLabel = withStyles({\n  root: {\n    padding: 0,\n    margin: 0\n  }\n})(props => <FormControlLabel color=\"default\" {...props} />);\n\nconst GreenCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.5em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#17bebb\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst YellowCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#eec643\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst RedCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#d62246\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst Gray1Checkbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#c0c0c0\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst Gray2Checkbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"##898989\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nfunction CheckBoxs(props) {\n  const { value, onChange} = props;\n\n  const handleChange = event => {\n    onChange({ ...value, [event.target.name]: event.target.checked });\n  };\n\n\n  return (\n    <Box elevation={3} id=\"panel\">\n      <FormGroup row>\n        <CostuomFormControlLabel\n          control={\n            <GreenCheckbox\n              checked={value.normal}\n              onChange={handleChange}\n              name=\"normal\"\n            />\n          }\n          label=\"通常\"\n        />\n        <CostuomFormControlLabel\n          control={\n            <YellowCheckbox\n              checked={value.restriction}\n              onChange={handleChange}\n              name=\"restriction\"\n            />\n          }\n          label=\"制限\"\n        />\n        <CostuomFormControlLabel\n          control={\n            <RedCheckbox\n              checked={value.stop}\n              onChange={handleChange}\n              name=\"stop\"\n            />\n          }\n          label=\"停止\"\n        />\n        <CostuomFormControlLabel\n          control={\n            <Gray1Checkbox\n              checked={value.nobeds}\n              onChange={handleChange}\n              name=\"nobeds\"\n            />\n          }\n          label=\"設置なし\"\n        />\n        <CostuomFormControlLabel\n          control={\n            <Gray2Checkbox\n              checked={value.unanswered}\n              onChange={handleChange}\n              name=\"unanswered\"\n            />\n          }\n          label=\"未回答\"\n        />\n      </FormGroup>\n    </Box>\n  );\n}\n\nexport default CheckBoxs;\n"]},"metadata":{},"sourceType":"module"}