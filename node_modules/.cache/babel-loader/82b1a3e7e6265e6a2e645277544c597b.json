{"ast":null,"code":"import _regeneratorRuntime from\"/Users/idg08/Desktop/works/COVID19-japan-medical-service-status/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/idg08/Desktop/works/COVID19-japan-medical-service-status/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";function decodeText(_x){return _decodeText.apply(this,arguments);}function _decodeText(){_decodeText=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(buffer){var charset,decoder,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:charset=_args.length>1&&_args[1]!==undefined?_args[1]:\"utf-8\";if(!window.TextDecoder){_context.next=4;break;}decoder=new TextDecoder(charset);return _context.abrupt(\"return\",decoder.decode(buffer));case 4:return _context.abrupt(\"return\",new Promise(function(resolve,reject){var blob=new Blob([buffer],{type:\"text/plain;charset=\".concat(charset)});var reader=new FileReader();reader.onload=function(){resolve(reader.result);};reader.onerror=function(){reject(reader.error);};reader.readAsText(blob,charset);}));case 5:case\"end\":return _context.stop();}}},_callee);}));return _decodeText.apply(this,arguments);}export default decodeText;","map":{"version":3,"sources":["/Users/idg08/Desktop/works/COVID19-japan-medical-service-status/src/components/DecodeText.js"],"names":["decodeText","buffer","charset","window","TextDecoder","decoder","decode","Promise","resolve","reject","blob","Blob","type","reader","FileReader","onload","result","onerror","error","readAsText"],"mappings":"iXAAeA,CAAAA,U,0IAAf,iBAA0BC,MAA1B,sJAAkCC,OAAlC,+CAA4C,OAA5C,KAEMC,MAAM,CAACC,WAFb,yBAGUC,OAHV,CAGoB,GAAID,CAAAA,WAAJ,CAAgBF,OAAhB,CAHpB,iCAIWG,OAAO,CAACC,MAAR,CAAeL,MAAf,CAJX,yCAQS,GAAIM,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtC,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAAS,CAACV,MAAD,CAAT,CAAmB,CAAEW,IAAI,8BAAwBV,OAAxB,CAAN,CAAnB,CAAb,CACA,GAAMW,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACAD,MAAM,CAACE,MAAP,CAAgB,UAAM,CACpBP,OAAO,CAACK,MAAM,CAACG,MAAR,CAAP,CACD,CAFD,CAGAH,MAAM,CAACI,OAAP,CAAiB,UAAM,CACrBR,MAAM,CAACI,MAAM,CAACK,KAAR,CAAN,CACD,CAFD,CAGAL,MAAM,CAACM,UAAP,CAAkBT,IAAlB,CAAwBR,OAAxB,EACD,CAVM,CART,wD,6CAqBA,cAAeF,CAAAA,UAAf","sourcesContent":["async function decodeText(buffer, charset = \"utf-8\") {\n  // Encoding API\n  if (window.TextDecoder) {\n    const decoder = new TextDecoder(charset);\n    return decoder.decode(buffer);\n  }\n\n  // FileReader API\n  return new Promise((resolve, reject) => {\n    const blob = new Blob([buffer], { type: `text/plain;charset=${charset}` });\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    reader.readAsText(blob, charset);\n  });\n}\n\nexport default decodeText;\n"]},"metadata":{},"sourceType":"module"}