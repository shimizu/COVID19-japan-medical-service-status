{"version":3,"sources":["components/Layers.js","components/CheckBoxs.js","components/BottomBtn.js","components/modal.js","components/DecodeText.js","App.js","theme.js","index.js"],"names":["convertStats","normal","restriction","stop","nobeds","unanswered","scatterColor","colorRange","props","data","layerType","hospitalState","onHover","onClick","statefilter","Object","keys","filter","key","map","plotdata","d","some","v","ScatterplotLayer","id","pickable","opacity","stroked","filled","radiusScale","radiusMinPixels","lineWidthMinPixels","getPosition","getRadius","getFillColor","getLineColor","HexagonLayer","radius","extruded","elevationScale","elevationRange","getColorValue","alllength","length","count","i","CostuomFormControlLabel","withStyles","root","padding","margin","FormControlLabel","color","GreenCheckbox","marginLeft","checked","Checkbox","YellowCheckbox","RedCheckbox","Gray1Checkbox","Gray2Checkbox","CheckBoxs","value","onChange","handleChange","event","target","name","Box","elevation","FormGroup","row","control","label","CosutmBottomNavigationAction","selected","BottomNavigationAction","BottomBtn","BottomNavigation","newValue","showLabels","icon","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","spacing","SimpleModal","body","open","onClose","classes","React","useState","modalStyle","wrapper","style","className","rel","href","Modal","aria-labelledby","aria-describedby","buffer","a","charset","window","TextDecoder","decoder","decode","Promise","resolve","reject","blob","Blob","type","reader","FileReader","onload","result","onerror","error","readAsText","decodeText","data_order","tableFontColor","csvcast","code","forEach","isNaN","tableStyles","table","maxHeight","overflow","fontWeight","whiteSpace","App","mapRef","useRef","bbtnRef","tableClass","setData","cursor","setCursor","setHospitalState","setLayerType","innerWidth","height","innerHeight","longitude","latitude","zoom","maxZoom","viewport","setViewport","modalBody","setModalbody","modalOpen","setModalOpen","getMapsize","current","offsetWidth","offsetHeight","bbtnHeight","useEffect","url","parse","fetchFile","ZipLoader","buff","then","text","loadData","csvParse","sort","b","fetchData","addEventListener","removeEventListener","AppBar","Toolbar","Typography","variant","ref","mapStyle","mapboxApiAccessToken","onViewportChange","getCursor","layers","e","cur","object","points","rows","reverse","c","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","createTable","controller","MapController","dragRotate","initialViewState","createMuiTheme","typography","fontSize","MuiButton","MuiFilledInput","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiInputLabel","MuiListItem","dense","MuiOutlinedInput","MuiFab","MuiTable","MuiTextField","MuiToolbar","overrides","sizeSmall","marginRight","ReactDOM","render","Fragment","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c9c209a6.chunk.js","sourcesContent":["import { ScatterplotLayer, HexagonLayer } from \"deck.gl\";\n\n\nconst convertStats = {\n    normal:\"通常\",\n    restriction:\"制限\",\n    stop :\"停止\",\n    nobeds :\"設置なし\",\n    unanswered :\"未回答\",\n}\n\nconst scatterColor = {\n    \"通常\":[23, 190, 187],\n    \"制限\":[255, 165, 0],\n    \"停止\":[214, 34, 70],\n    \"設置なし\":[192, 192, 192],\n    \"未回答\":[137, 137, 137],\n}\n\nconst colorRange = [\n    [1, 152, 189],\n    [73, 227, 206],\n    [216, 254, 181],\n    [254, 237, 177],\n    [254, 173, 84],\n    [209, 55, 78]\n  ];\n  \nexport default props => {\n  const { data, layerType,  hospitalState, onHover, onClick} = props;\n \n  if (!data) return;\n\n  const statefilter = Object.keys(hospitalState)\n    .filter(key => hospitalState[key])\n    .map(key => convertStats[key]);\n\n  const plotdata = data.filter(d => statefilter.some(v => d[\"医療区分回答\"] === v))\n\n  \n\n  const scatter = new ScatterplotLayer({\n    id: \"scatterplot-layer\",\n    data:plotdata,\n    pickable: true,\n    opacity: 0.5,\n    stroked: true,\n    filled: true,\n    radiusScale: 1,\n    radiusMinPixels: 6,\n    lineWidthMinPixels: 1,\n    getPosition: d => [d[\"経度\"],d[\"緯度\"]],\n    getRadius: 0,\n    getFillColor: d => scatterColor[d[\"医療区分回答\"]],\n    getLineColor: d => scatterColor[d[\"医療区分回答\"]],\n    onClick: onClick,\n    onHover:onHover\n  });\n\n  const hex = new HexagonLayer({\n    id: \"hexagon-layer\",\n    data:plotdata,\n    colorRange,\n    opacity: 0.8,\n    radius: 10000,\n    pickable: true,\n    extruded: true,\n    elevationScale: 60,\n    elevationRange: [0, 3000],\n    getPosition: d => [d[\"経度\"],d[\"緯度\"]],\n    getColorValue: d => {\n        const alllength = d.length;\n        let count = 0;\n        for(let i =0 ; i <  d.length;i++){\n            if(d[i][\"医療区分回答\"] === \"停止\" || d[i][\"医療区分回答\"] === \"制限\")  count++\n        }\n        const percent = ~~(count / alllength * 100)\n        return percent\n    },\n    onClick: onClick,\n    onHover:onHover  \n  });\n\n  const ramify = {\n      \"point\":scatter,\n      \"hex\":hex\n  }\n\n  const layers = [ramify[layerType]];\n\n  return layers;\n};\n","import React  from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\n\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst CostuomFormControlLabel = withStyles({\n  root: {\n    padding: 0,\n    margin: 0\n  }\n})(props => <FormControlLabel color=\"default\" {...props} />);\n\nconst GreenCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.5em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#17bebb\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst YellowCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#FFA500\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst RedCheckbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#d62246\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst Gray1Checkbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#c0c0c0\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst Gray2Checkbox = withStyles({\n  root: {\n    padding: 0,\n    marginLeft: \"0.25em\",\n    color: \"gray\",\n    \"&$checked\": {\n      color: \"#898989\"\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nfunction CheckBoxs(props) {\n  const { value, onChange} = props;\n\n  const handleChange = event => {\n    onChange({ ...value, [event.target.name]: event.target.checked });\n  };\n\n\n  return (\n    <Box elevation={3} id=\"panel\">\n      <FormGroup row>\n        <CostuomFormControlLabel\n          control={\n            <GreenCheckbox\n              checked={value.normal}\n              onChange={handleChange}\n              name=\"normal\"\n            />\n          }\n          label=\"通常\"\n        />\n        <CostuomFormControlLabel\n          control={\n            <YellowCheckbox\n              checked={value.restriction}\n              onChange={handleChange}\n              name=\"restriction\"\n            />\n          }\n          label=\"制限\"\n        />\n        <CostuomFormControlLabel\n          control={\n            <RedCheckbox\n              checked={value.stop}\n              onChange={handleChange}\n              name=\"stop\"\n            />\n          }\n          label=\"停止\"\n        />\n        <CostuomFormControlLabel\n          control={\n            <Gray1Checkbox\n              checked={value.nobeds}\n              onChange={handleChange}\n              name=\"nobeds\"\n            />\n          }\n          label=\"設置なし\"\n        />\n        <CostuomFormControlLabel\n          control={\n            <Gray2Checkbox\n              checked={value.unanswered}\n              onChange={handleChange}\n              name=\"unanswered\"\n            />\n          }\n          label=\"未回答\"\n        />\n      </FormGroup>\n    </Box>\n  );\n}\n\nexport default CheckBoxs;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\n\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport GridOnIcon from \"@material-ui/icons/GridOn\";\n\nconst CosutmBottomNavigationAction = withStyles({\n  root: {\n    color: \"#999\",\n    \"&$selected\": {\n      color: \"#00f\"\n    }\n  },\n  selected: {}\n})(props => <BottomNavigationAction color=\"default\" {...props} />);\n\nfunction BottomBtn(props) {\n  const { value, onChange } = props;\n\n \n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        onChange(newValue);\n      }}\n      showLabels\n    >\n      <CosutmBottomNavigationAction\n        label=\"Point\"\n        value=\"point\"\n        icon={<GrainIcon />}\n      />\n      <CosutmBottomNavigationAction\n        label=\"Hex\"\n        value=\"hex\"\n        icon={<GridOnIcon />}\n      />\n    </BottomNavigation>\n  );\n}\n\nexport default BottomBtn;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\n\nfunction getModalStyle() {\n  const top = 25; \n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${left}%, -${top}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: \"90%\",\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function SimpleModal(props) {\n  const {body, open, onClose} = props;\n\n  \n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  \n\n\n  const wrapper = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\"><a rel=\"noopener noreferrer\" href=\"https://cio.go.jp/hosp_monitoring_c19\">全国医療機関の医療提供体制の状況のオープンデータ</a></h2>\n      <div id=\"simple-modal-description\">\n        {body}\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={onClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {wrapper}\n      </Modal>\n    </div>\n  );\n}\n","async function decodeText(buffer, charset = \"utf-8\") {\n  // Encoding API\n  if (window.TextDecoder) {\n    const decoder = new TextDecoder(charset);\n    return decoder.decode(buffer);\n  }\n\n  // FileReader API\n  return new Promise((resolve, reject) => {\n    const blob = new Blob([buffer], { type: `text/plain;charset=${charset}` });\n    const reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = () => {\n      reject(reader.error);\n    };\n    reader.readAsText(blob, charset);\n  });\n}\n\nexport default decodeText;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport MapGL from \"react-map-gl\";\nimport DeckGL, { MapController } from \"deck.gl\";\nimport layers from \"./components/Layers\";\n\n\nimport CheckBoxs from \"./components/CheckBoxs\";\nimport BottomBtn from \"./components/BottomBtn\";\nimport SimpleModal from \"./components/modal\";\n\n\nimport { parse, fetchFile } from '@loaders.gl/core';\nimport { ZipLoader } from '@loaders.gl/zip';\nimport decodeText from './components/DecodeText.js';\nimport { csvParse } from 'd3-dsv';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n//mapboxのトークンは自分で取得したものに変更してください。\n//このトークンは突然使えなくなる可能性があります。\nconst MAPBOX_TOKEN =\n  \"pk.eyJ1Ijoic2hpbWl6dSIsImEiOiJjam95MDBhamYxMjA1M2tyemk2aHMwenp5In0.i2kMIJulhyPLwp3jiLlpsA\";\n\n  const DATA_URL = \"data/covid-19_daily_survey.zip\";\n\n  const data_order = {\n    \"通常\":3,\n    \"制限\":2,\n    \"停止\":1,\n    \"設置なし\":4,\n    \"未回答\":5,\n}\nconst tableFontColor = {\n  \"通常\": \"#17bebb\",\n  \"制限\":\"#FFA500\",\n  \"停止\":\"#d62246\",\n  \"設置なし\":\"#c0c0c0\",\n  \"未回答\":\"#898989\",\n}\n\n\n//data convert fnction\nconst  csvcast = (d, i) => {\n\td.id = d.code;\n\tObject.keys(d).forEach((key) => {\n\t\tif (!isNaN(+d[key]) && key !== 'id') d[key] = +d[key];\n\t});\n\treturn d;\n}\n\nconst tableStyles = makeStyles({\n  table: {\n    maxHeight:400,\n    overflow:\"auto\",\n    \"& th\": {\n      fontWeight:\"bold\",\n      whiteSpace:\"nowrap\",\n    },\n    \"& td\": {\n      whiteSpace:\"nowrap\",\n    }            \n  },\n});\n\n\nfunction App() {\n  const mapRef = useRef(null);\n  const bbtnRef = useRef(null);\n\n\n  const tableClass = tableStyles();\n\n  const [data, setData] = useState(null);\n\n  const [cursor, setCursor] = useState(\"move\");\n\n  const [hospitalState, setHospitalState]  = useState({\n    normal: true,\n    restriction: true,\n    stop: true,\n    nobeds: true,\n    unanswered: true\n  });\n\n  const [layerType, setLayerType]  = useState(\"point\");\n\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    longitude: 139.0110974,\n    latitude: 36.3226885,\n    zoom: 6,\n    maxZoom: 20\n  });\n\n  const [modalBody, setModalbody]  = useState(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  const getMapsize = () => {\n    const width = mapRef.current ? mapRef.current.offsetWidth : 0;\n    const height = mapRef.current ? mapRef.current.offsetHeight : 0;\n    const bbtnHeight = bbtnRef.current ? bbtnRef.current.offsetHeight : 0;\n\n    setViewport(v => {\n      return {\n        ...v,\n        width: width,\n        height: height - bbtnHeight\n      };\n    });\n  };\n\n  //ロード時にコンポネーントのwidth,heightを取得\n  useEffect(getMapsize, []);\n\n useEffect(()=>{\n\t\t//地価データ取得\n\t\tconst fetchData = async (url) => {\n\t\t\tconst buff = await parse(fetchFile(url), ZipLoader);\n\t\t\tconst key = Object.keys(buff)[0];\n\t\t\tdecodeText(buff[key]).then((text) => {\n        const loadData = csvParse(text, csvcast);\n        loadData.sort((a,b)=> data_order[b[\"医療区分回答\"]] - data_order[a[\"医療区分回答\"]]);\n\t\t\t\tsetData(loadData);\n\t\t\t});\n\t\t};\n    fetchData(DATA_URL);  \n    \n  }, []);\n\n  //resize\n  useEffect(() => {\n    window.addEventListener(\"resize\", getMapsize);\n    return () => window.removeEventListener(\"resize\", getMapsize);\n  }, []);\n\n  const handlerOnHover = (e) => {\n    const cur = (e.object) ? \"pointer\" : \"move\";\n    setCursor(cur);\n  }\n\n  const createTable = (data) => {\n    \n    const rows = data.reverse().map((d,i) => {\n      return {key:i, a:d[\"医療機関名\"], b:d[\"医療区分\"], c:d[\"医療区分回答\"], d:d[\"医療機関住所\"], e:d[\"提出日\"]}\n    });\n\n    return (\n      <TableContainer  className={tableClass.table} component={Paper}>\n        <Table size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">医療機関名</TableCell>\n            <TableCell align=\"left\">医療区分回答</TableCell>\n            <TableCell align=\"left\">医療区分</TableCell>\n            <TableCell align=\"left\">医療機関住所</TableCell>\n            <TableCell align=\"left\">提出日</TableCell>\n          </TableRow>\n        </TableHead>          \n        <TableBody>\n            {rows.map((row) => (\n            <TableRow key={row.key}>\n                <TableCell align=\"left\">{row.a}</TableCell>\n                <TableCell style={{fontWeight:\"bold\", color:tableFontColor[row.c]}} align=\"left\">{row.c}</TableCell>\n                <TableCell align=\"left\">{row.b}</TableCell>\n                <TableCell align=\"left\">{row.d}</TableCell>\n                <TableCell align=\"left\">{row.e}</TableCell>\n            </TableRow>\n            ))}\n        </TableBody>\n        </Table>\n        </TableContainer>\n      )\n\n  }\n\n  const handlerOnClickLayer = (e) => {\n    const data = e.object.points || [e.object] ; \n    if(!data) return ;\n    const body = createTable(data);\n    setModalbody(body);\n    setModalOpen(true)\n  }\n  \n  const handlerOnColse = ()=> {\n    setModalOpen(false)\n  }\n\n  return (\n    <>\n      <div id=\"header\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">医療提供体制の状況</Typography>\n          </Toolbar>\n        </AppBar>\n        <CheckBoxs value={hospitalState} onChange={setHospitalState} />\n        <SimpleModal body={modalBody} open={modalOpen} onClose={handlerOnColse}/>\n      </div>\n      <div id=\"panel\"></div>\n      <div id=\"map\" ref={mapRef}>\n        <MapGL\n          style={{}}\n          {...viewport}\n          mapStyle={\"mapbox://styles/mapbox/light-v10\"}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          onViewportChange={v => setViewport(v)}\n        >\n          <DeckGL\n          getCursor={() => cursor}\n            layers={layers({\n              data,\n              layerType:layerType,\n              hospitalState:hospitalState,\n              onHover:handlerOnHover,\n              onClick:handlerOnClickLayer\n            })}\n            controller={{ type: MapController, dragRotate: false }}\n            initialViewState={viewport}\n          />\n        </MapGL>\n\n      </div>\n\n      <div id=\"bottom\" ref={bbtnRef}>\n        <BottomBtn value={layerType} onChange={setLayerType} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n/*\n \n\n        */\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n    typography: {\n        // In Chinese and Japanese the characters are usually larger,\n        // so a smaller fontsize may be appropriate.\n        fontSize: 12,\n      },    \n    props: {\n      MuiButton: {\n        size: 'small',\n      },\n      MuiFilledInput: {\n        margin: 'dense',\n      },\n      MuiFormControl: {\n        margin: 'dense',\n      },\n      MuiFormHelperText: {\n        margin: 'dense',\n      },\n      MuiIconButton: {\n        size: 'small',\n      },\n      MuiInputBase: {\n        margin: 'dense',\n      },\n      MuiInputLabel: {\n        size:\"small\",\n        margin: 'dense',\n      },\n      MuiListItem: {\n        dense: true,\n      },\n      MuiOutlinedInput: {\n        margin: 'dense',\n      },\n      MuiFab: {\n        size: 'small',\n      },\n      MuiTable: {\n        size: 'small',\n      },\n      MuiTextField: {\n        margin: 'dense',\n      },\n      MuiToolbar: {\n        variant: 'dense',\n      },\n    },\n    overrides: {\n        MuiInputLabel: {\n        sizeSmall: {\n        // Adjust spacing to reach minimal touch target hitbox\n        marginLeft: 4,\n        marginRight: 4,\n        padding: 12,\n        },\n      },\n    },\n  });\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\n\nimport './index.css';\n\nReactDOM.render(\n  <React.Fragment>\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}